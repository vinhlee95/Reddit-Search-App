{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","addEventListener","e","value","querySelector","results","output","forEach","result","image","preview","images","source","url","title","truncateText","selftext","innerHTML","preventDefault","text","limit","shortened","indexOf","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIA;;;;;;AAEA;AACA,MAAMe,aAAaC,SAASC,cAAT,CAAwB,aAAxB,CAAnB;;AAEA;AATA;AACA;;AAEA;AAOAF,WAAWG,gBAAX,CAA4B,QAA5B,EAAsCC,KAAK;AACxC;AACA,SAAMlB,aAAae,SAASC,cAAT,CAAwB,cAAxB,EAAwCG,KAA3D;;AAEA;AACA,SAAMjB,SAASa,SAASK,aAAT,CAAuB,8BAAvB,EAAuDD,KAAtE;;AAEA;AACA,SAAMlB,cAAcc,SAASC,cAAT,CAAwB,OAAxB,EAAiCG,KAArD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAOpB,MAAP,CAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,MAAvC,EACCE,IADD,CACMiB,WAAW;AACd,UAAIC,SAAS,4BAAb;AACAD,cAAQE,OAAR,CAAgBC,UAAU;AACvBZ,iBAAQC,GAAR,CAAYW,MAAZ;AACA;AACA,eAAMC,QAAQD,OAAOE,OAAP,GAEdF,OAAOE,OAAP,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,MAAzB,CAAgCC,GAFlB,GAId,uFAJA;;AAMAP,mBAAW;;gDAE4BG,KAAM;;2CAEXD,OAAOM,KAAM;yCACfC,aAAaP,OAAOQ,QAApB,EAA8B,GAA9B,CAAmC;4BAChDR,OAAOK,GAAI;;;UAN9B;AAUF,OAnBD;;AAqBAP,gBAAU,QAAV;AACA;AACAP,eAASC,cAAT,CAAwB,SAAxB,EAAmCiB,SAAnC,GAA+CX,MAA/C;AAEF,IA5BD;;AA8BAJ,KAAEgB,cAAF;AACF,CAvDD;;AAyDA;AACA,SAASH,YAAT,CAAsBI,IAAtB,EAA4BC,KAA5B,EAAmC;AAChC,SAAMC,YAAYF,KAAKG,OAAL,CAAa,GAAb,EAAkBF,KAAlB,CAAlB;AACA,OAAGC,aAAa,CAAC,CAAjB,EAAoB,OAAOF,IAAP;AACpB,UAAOA,KAAKI,SAAL,CAAe,CAAf,EAAkBF,SAAlkBDxEc;AACZtC,WAAQ,UAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAC/C,aAAOC,MAAO,wCAAuCH,UAAW,UAASC,WAAY,SAAQC,MAAO,EAA7F,EACNE,IADM,CACDC,OAAOA,IAAIC,IAAJ,EADN,EAENF,IAFM,CAEDG,QAAQA,KAAKA,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBF,QAAQA,KAAKA,IAApC,CAFP,EAGNG,KAHM,CAGAC,OAAOC,QAAQC,GAAR,CAAYF,GAAZ,CAHP,CAAP;AAIF;AANW","file":"searchReddit.map","sourcesContent":["export default {\r\n   search: function(searchTerm, searchLimit, sortBy) {\r\n      return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&limit=${searchLimit}&sort=${sortBy}`)\r\n      .then(res => res.json())\r\n      .then(data => data.data.children.map(data => data.data))\r\n      .catch(err => console.log(err));\r\n   }\r\n}","// Get search term, search limit, sort by\r\n// Use search method of reddit api to fetch data\r\n\r\n// Import\r\nimport reddit from './redditapi';\r\n\r\n// Get searchForm\r\nconst searchForm = document.getElementById('search-form');\r\n\r\n// Add event submit listener\r\nsearchForm.addEventListener('submit', e => {\r\n   // Get search term\r\n   const searchTerm = document.getElementById('search-input').value;\r\n   \r\n   // Get Sort By\r\n   const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n\r\n   // Get Search limit\r\n   const searchLimit = document.getElementById('limit').value;\r\n\r\n   // // Search Term validation\r\n   // if(searchTerm === '') {\r\n   //    showMessage('Please add the search term', 'alert-danger');\r\n   // }\r\n   \r\n   // In case not importing reddit\r\n   // function search(searchTerm, searchLimit, sortBy)  {\r\n   //    return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&limit=${searchLimit}&sort=${sortBy}`)\r\n   //    .then(res => res.json())\r\n   //    .then(data => data.data.children.map(data => data.data))\r\n   //    .catch(err => console.log(err));\r\n   // }\r\n\r\n   //Search Reddit\r\n   reddit.search(searchTerm, searchLimit, sortBy)\r\n   .then(results => {\r\n      let output = '<div class=\"card-columns\">';\r\n      results.forEach(result => {\r\n         console.log(result);\r\n         // Check image\r\n         const image = result.preview \r\n         ?\r\n         result.preview.images[0].source.url\r\n         :\r\n         'https://s3.amazonaws.com/media.eremedia.com/uploads/2014/10/15174120/reddit-logo2.png'\r\n\r\n         output += `\r\n            <div class=\"card\">\r\n               <img class=\"card-img-top\" src='${image}' alt=\"Card image cap\">\r\n               <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">${result.title}</h5>\r\n                  <p class=\"card-text\">${truncateText(result.selftext, 100)}</p>\r\n                  <a href=${result.url} class=\"btn btn-primary\">Read More</a>\r\n               </div>\r\n            </div>\r\n         `;\r\n      });\r\n\r\n      output += '</div>';\r\n      // Display output\r\n      document.getElementById('results').innerHTML = output;\r\n      \r\n   });\r\n\r\n   e.preventDefault();\r\n});\r\n\r\n//Truncate text\r\nfunction truncateText(text, limit) {\r\n   const shortened = text.indexOf(' ', limit);\r\n   if(shortened == -1) return text;\r\n   return text.substring(0, shortened);\r\n}\r\n"]}